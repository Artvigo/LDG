function [QT_BR,QT_BL,RUP,FQT] = assemble_QT(U,R,UR,RL,P,Env,N,h)
%函数 assemble_QT组装QT方程里的矩阵
%   输入变量：N为单元数，h为步长,U,R向量，UR,RL,P
%   输出变量：RUP为u,r,p三个函数相乘求积，组成向量
%                    QT_BR,QT_BL关于QT方程边界右端点的总刚矩阵,左端点的总刚矩阵
%                       

%预分配
QT_BR=zeros(3*N,1);
QT_BL=zeros(3*N,1);
RUP=zeros(3*N,1);
FQT=zeros(3*N,1);

%求f,数值流通量中的系数项 
umax=zeros(1,N);
for i=1:N
    %一个单元中有两个值，分别取出，比较大小，取大的，最后组成的向量，取向量中的最大值
    un(1:3,1)=U(3*i-2:3*i,1);
    u1=un(1,1)+un(2,1)*(-h/2)+un(3,1)*(h^2/4);
    u2=un(1,1)+un(2,1)*(h/2)+un(3,1)*(h^2/4);
    umax(1,i)=max(u1,u2);
end
phi=max(abs(3.*umax));

%求RUP
for i=1:N
    a=Env(i,1);
    b=Env(i,2);
    mid=(a+b)/2;
    %三个系数
    r(1:3,1)=R(3*i-2:3*i,1);
    u(1:3,1)=U(3*i-2:3*i,1);
    p(1:3,1)=P(3*i-2:3*i,1);
    %被积函数是R，U，PHI求导后的函数乘以相应的基函数导数
     F2=@(x)(1/2*(r(1,1)+r(2,1)*(x-mid)+r(3,1)*(x-mid).^2).^2+3/2*(u(1,1)+u(2,1)*(x-mid)+u(3,1)*(x-mid).^2).^2-(p(1,1)+p(2,1)*(x-mid)+p(3,1)*(x-mid).^2));
    F3=@(x)((1/2*(r(1,1)+r(2,1)*(x-mid)+r(3,1)*(x-mid).^2).^2+3/2*(u(1,1)+u(2,1)*(x-mid)+u(3,1)*(x-mid).^2).^2-(p(1,1)+p(2,1)*(x-mid)+p(3,1)*(x-mid).^2)).*(2*(x-mid)));
    %利用求积函数进行求积运算
    quad1 = 0;
    quad2 = quadrature(F2,a,b);
    quad3 = quadrature(F3,a,b);
    % 组装成RUP
    RUP(3*i-2:3*i,1)=[quad1,quad2,quad3]';
end
    
%边界处理PL是由P向量向左平移一个单元的向量
for i=2:N
    PL(3*i-2:3*i,1)=P(3*i-5:3*i-3,1);
end
PL(1:3,1)=P(3*N-2:3*N,1);

%边界处理UL是由U向量向左平移一个单元的向量
for i=2:N
    UL(3*i-2:3*i,1)=U(3*i-5:3*i-3,1);
end
UL(1:3,1)=U(3*N-2:3*N,1);


%单元循环，组装
for i=1:N
    %三个系数
    r(1:3,1)=R(3*i-2:3*i,1);
    u(1:3,1)=U(3*i-2:3*i,1);
    p(1:3,1)=P(3*i-2:3*i,1);
    pl(1:3,1)=PL(3*i-2:3*i,1);
    ur(1:3,1)=UR(3*i-2:3*i,1);
    ul(1:3,1)=UL(3*i-2:3*i,1);
    rl(1:3,1)=RL(3*i-2:3*i,1);
  %f的数值通量，形成的值
  fur=1/2*(3/2*(ur(1,1)+ur(2,1)*(-h/2)+ur(3,1)*(h^2/4))^2+3/2*(u(1,1)+u(2,1)*(h/2)+u(3,1)*(h^2/4))^2-phi*((ur(1,1)+ur(2,1)*(-h/2)+ur(3,1)*(h^2/4))-(u(1,1)+u(2,1)*(h/2)+u(3,1)*(h^2/4))));
  ful=1/2*(3/2*(u(1,1)+u(2,1)*(-h/2)+u(3,1)*(h^2/4))^2+3/2*(ul(1,1)+ul(2,1)*(h/2)+ul(3,1)*(h^2/4))^2-phi*((u(1,1)+u(2,1)*(-h/2)+u(3,1)*(h^2/4))-(ul(1,1)+ul(2,1)*(h/2)+ul(3,1)*(h^2/4))));
    
%
    br1=(1/2*(r(1,1)+r(2,1)*(h/2)+r(3,1)*(h^2/4))^2+fur-(p(1,1)+p(2,1)*(h/2)+p(3,1)*(h^2/4)));
    br2=(1/2*(r(1,1)+r(2,1)*(h/2)+r(3,1)*(h^2/4))^2+fur-(p(1,1)+p(2,1)*(h/2)+p(3,1)*(h^2/4)))*(h/2);
    br3=(1/2*(r(1,1)+r(2,1)*(h/2)+r(3,1)*(h^2/4))^2+fur-(p(1,1)+p(2,1)*(h/2)+p(3,1)*(h^2/4)))*(h^2/4);
    br=[br1,br2,br3]';
    %组装
   QT_BR(3*i-2:3*i,1)=br;
    
    bl1=(1/2*(rl(1,1)+rl(2,1)*(h/2)+rl(3,1)*(h^2/4))^2+ful-(pl(1,1)+pl(2,1)*(h/2)+pl(3,1)*(h^2/4)));
    bl2=(1/2*(rl(1,1)+rl(2,1)*(h/2)+rl(3,1)*(h^2/4))^2+ful-(pl(1,1)+pl(2,1)*(h/2)+pl(3,1)*(h^2/4)))*(-h/2);
    bl3=(1/2*(rl(1,1)+rl(2,1)*(h/2)+rl(3,1)*(h^2/4))^2+ful-(pl(1,1)+pl(2,1)*(h/2)+pl(3,1)*(h^2/4)))*(h^2/4);
    
     bl=[bl1,bl2,bl3]';
     %组装
    QT_BL(3*i-2:3*i,1)=bl;
end
%右端项
FQT=RUP+QT_BL-QT_BR;
end


